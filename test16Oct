import numpy as np
import pandas as pd
import os
from shutil import copyfile
import pickle
import matplotlib.pyplot as plt
import matplotlib
import seaborn as sns
import colorlover as cl
from scipy.spatial import distance
import ast

import neuro_morpho_toolbox as nmt
#%matplotlib inline
import pickle
pickle_in = open("/home/penglab/FeaCal/all_ns.pickle","rb")
[ns] = pickle.load(pickle_in)
sf = ns.features['soma_features'].region
ct = sf["Region"].value_counts().sort_values(ascending=False)
_ = sns.countplot(y="Region", 
                  data=sf.loc[sf.Region.isin(ct.index[ct>10])],
                 )
_ = ns.ReduceDimUMAP(feature_set="projection_features", n_neighbors=100)
_ = ns.FeatureScatter(["CellType", "Hemisphere"], map="UMAP")

### DataFrame regionINFO includes ['index,'Vol','abbr']
regionN, count = np.unique(nmt.annotation.array, return_counts=True)
regionINFO = pd.DataFrame(index = list(regionN))
regionINFO['index'] = list(regionN)
regionINFO['Vol'] =  count
regionINFO.loc[:,'Coor'] = 'unknown'
regionINFO['Coor'].astype('object',inplace=True)
for iterI in regionINFO.index.tolist():
    if iterI in nmt.bs.level.index.tolist():
        regionINFO.loc[iterI,'abbr'] = nmt.bs.level.loc[iterI,'Abbrevation']
procI=0
for iterIDX in regionINFO.index.tolist()[1:]:
    coordi=[]
    co_1,co_2,co_3 = np.where(nmt.annotation.array==iterIDX)
    #colnum = len(co_1)//1000000
    #for coliter in range(colnum):
    for i in range(len (co_1)):
        coordi.append((co_1[i],co_2[i],co_3[i]))
    dis_list = []
    for i in range(len(co_1)):
        temp = np.array([(co_1[i],co_2[i],co_3[i])])
        dis_list.append(np.sum(distance.cdist(temp, coordi, 'sqeuclidean')))
                   
    regionINFO.loc[iterIDX,'Distance'] = str(dis_list)
    #print(ast.literal_eval(str(coordi)))
    procI=procI+1
    print(procI/regionINFO.shape[0])
regionINFO = regionINFO.fillna('unknown')
#regionINFO.to_excel('/home/penglab/NMTcode/regionINFO.xlsx')
regionINFO.to_excel('/home/penglab/NMTcode/regionINFO.xlsx')